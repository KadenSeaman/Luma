{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kaden\\\\Documents\\\\Web Development\\\\Luma\\\\frontend\\\\src\\\\components\\\\node.js\",\n  _s = $RefreshSig$();\nimport { useContext } from 'react';\nimport { RendererContext } from '../context/rendererContext';\nimport '../styles/node.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Node({\n  data,\n  ref\n}) {\n  _s();\n  const {\n    id = 0,\n    name,\n    fields,\n    methods,\n    fontSize,\n    padding,\n    width,\n    height,\n    x,\n    y\n  } = data;\n  const {\n    offsetX,\n    offsetY,\n    scale\n  } = useContext(RendererContext);\n  const nodeStyle = {\n    opacity: id === 0 ? 0 : 1,\n    width: `${width * scale}px`,\n    height: `${height * scale}px`,\n    left: `${(x + offsetX) * scale}px`,\n    top: `${(y + offsetY) * scale}px`,\n    fontSize: `${fontSize * scale}px`,\n    padding: `${padding * scale}px`,\n    borderRadius: `${15 * scale}px`\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: id,\n    ref: ref,\n    className: \"node\",\n    style: nodeStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), (methods.length > 0 || fields.length > 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"divider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 60\n    }, this), fields.length > 0 && fields.map((field, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: field.toString()\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 59\n    }, this)), methods.length > 0 && fields.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"divider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 58\n    }, this), methods.length > 0 && methods.map((method, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: method.toString()\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 62\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(Node, \"ZbP7myfeneHpxg7MCBZ6OMeo/Sg=\");\n_c = Node;\nexport default Node;\nvar _c;\n$RefreshReg$(_c, \"Node\");","map":{"version":3,"names":["useContext","RendererContext","jsxDEV","_jsxDEV","Node","data","ref","_s","id","name","fields","methods","fontSize","padding","width","height","x","y","offsetX","offsetY","scale","nodeStyle","opacity","left","top","borderRadius","className","style","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","field","i","toString","method","_c","$RefreshReg$"],"sources":["C:/Users/kaden/Documents/Web Development/Luma/frontend/src/components/node.js"],"sourcesContent":["import { useContext } from 'react';\r\nimport { RendererContext } from '../context/rendererContext';\r\nimport '../styles/node.scss';\r\n\r\n\r\n\r\nfunction Node({data, ref}) {\r\n\r\n    const {id = 0, name, fields, methods, fontSize, padding, width, height, x, y} = data; \r\n    const {offsetX, offsetY, scale} = useContext(RendererContext);\r\n\r\n    const nodeStyle = {\r\n        opacity: id === 0 ? 0 : 1,\r\n        width: `${width * scale}px`,\r\n        height: `${height * scale}px`,\r\n        left: `${(x + offsetX) * scale}px`,\r\n        top: `${(y + offsetY) * scale}px`,\r\n        fontSize: `${fontSize * scale}px`,\r\n        padding: `${padding * scale}px`,\r\n        borderRadius: `${15 * scale}px`,\r\n    }\r\n\r\n    return (\r\n        <div id={id} ref={ref} className='node' style={nodeStyle}>\r\n            <h1>{name}</h1>\r\n            {(methods.length > 0 || fields.length > 0) && (<div className='divider'></div>)} \r\n            {fields.length > 0 && fields.map((field,i) => <p key={i}>{field.toString()}</p>)}\r\n            {methods.length > 0 && fields.length > 0 && (<div className='divider'></div>)} \r\n            {methods.length > 0 && methods.map((method,i) => <p key={i}>{method.toString()}</p>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Node;"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,eAAe,QAAQ,4BAA4B;AAC5D,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI7B,SAASC,IAAIA,CAAC;EAACC,IAAI;EAAEC;AAAG,CAAC,EAAE;EAAAC,EAAA;EAEvB,MAAM;IAACC,EAAE,GAAG,CAAC;IAAEC,IAAI;IAAEC,MAAM;IAAEC,OAAO;IAAEC,QAAQ;IAAEC,OAAO;IAAEC,KAAK;IAAEC,MAAM;IAAEC,CAAC;IAAEC;EAAC,CAAC,GAAGZ,IAAI;EACpF,MAAM;IAACa,OAAO;IAAEC,OAAO;IAAEC;EAAK,CAAC,GAAGpB,UAAU,CAACC,eAAe,CAAC;EAE7D,MAAMoB,SAAS,GAAG;IACdC,OAAO,EAAEd,EAAE,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC;IACzBM,KAAK,EAAE,GAAGA,KAAK,GAAGM,KAAK,IAAI;IAC3BL,MAAM,EAAE,GAAGA,MAAM,GAAGK,KAAK,IAAI;IAC7BG,IAAI,EAAE,GAAG,CAACP,CAAC,GAAGE,OAAO,IAAIE,KAAK,IAAI;IAClCI,GAAG,EAAE,GAAG,CAACP,CAAC,GAAGE,OAAO,IAAIC,KAAK,IAAI;IACjCR,QAAQ,EAAE,GAAGA,QAAQ,GAAGQ,KAAK,IAAI;IACjCP,OAAO,EAAE,GAAGA,OAAO,GAAGO,KAAK,IAAI;IAC/BK,YAAY,EAAE,GAAG,EAAE,GAAGL,KAAK;EAC/B,CAAC;EAED,oBACIjB,OAAA;IAAKK,EAAE,EAAEA,EAAG;IAACF,GAAG,EAAEA,GAAI;IAACoB,SAAS,EAAC,MAAM;IAACC,KAAK,EAAEN,SAAU;IAAAO,QAAA,gBACrDzB,OAAA;MAAAyB,QAAA,EAAKnB;IAAI;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACd,CAACrB,OAAO,CAACsB,MAAM,GAAG,CAAC,IAAIvB,MAAM,CAACuB,MAAM,GAAG,CAAC,kBAAM9B,OAAA;MAAKuB,SAAS,EAAC;IAAS;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAE,EAC9EtB,MAAM,CAACuB,MAAM,GAAG,CAAC,IAAIvB,MAAM,CAACwB,GAAG,CAAC,CAACC,KAAK,EAACC,CAAC,kBAAKjC,OAAA;MAAAyB,QAAA,EAAYO,KAAK,CAACE,QAAQ,CAAC;IAAC,GAApBD,CAAC;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAuB,CAAC,CAAC,EAC/ErB,OAAO,CAACsB,MAAM,GAAG,CAAC,IAAIvB,MAAM,CAACuB,MAAM,GAAG,CAAC,iBAAK9B,OAAA;MAAKuB,SAAS,EAAC;IAAS;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAE,EAC5ErB,OAAO,CAACsB,MAAM,GAAG,CAAC,IAAItB,OAAO,CAACuB,GAAG,CAAC,CAACI,MAAM,EAACF,CAAC,kBAAKjC,OAAA;MAAAyB,QAAA,EAAYU,MAAM,CAACD,QAAQ,CAAC;IAAC,GAArBD,CAAC;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAwB,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnF,CAAC;AAEd;AAACzB,EAAA,CAzBQH,IAAI;AAAAmC,EAAA,GAAJnC,IAAI;AA2Bb,eAAeA,IAAI;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}