{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kaden\\\\Documents\\\\Web Development\\\\Luma\\\\src\\\\components\\\\renderer.js\",\n  _s = $RefreshSig$();\nimport { useAppLayout } from \"../context/appLayoutContext\";\nimport '../styles/renderer.scss';\nimport { useRef } from 'react';\nimport Viewport from './viewport';\nimport Node from './node';\nimport { RendererLayoutProvider } from '../context/rendererLayoutContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Renderer() {\n  return /*#__PURE__*/_jsxDEV(RendererLayoutProvider, {\n    children: /*#__PURE__*/_jsxDEV(RendererContent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n_c = Renderer;\nfunction RendererContent() {\n  _s();\n  const {\n    rendererHeight,\n    rendererWidth,\n    rootNode\n  } = useAppLayout();\n  let renderer = useRef(null);\n  let testNode = useRef(null);\n  let testNodeData = {\n    id: -1\n  };\n\n  // Calculate necessary width to accomadate node text\n  const calculateNodeBounds = () => {\n    if (!testNode.current) return;\n    if (!rootNode) return;\n    for (const node of rootNode.nodes || []) {\n      testNodeData = node;\n      testNodeData.id = -1;\n      console.log(testNode.current);\n      node.width = testNode.current.getBoundingClientRect().width;\n      node.height = testNode.current.height;\n    }\n  };\n  calculateNodeBounds();\n  const adjList = new Map();\n  const HORIZONTAL_MARGIN = 150;\n  const VERTICAL_MARGIN = 150;\n  const CLUSTER_MARGIN = 200;\n  const rendererStyle = {\n    width: `${rendererWidth}vw`,\n    height: `${rendererHeight}vh`\n  };\n\n  // const overlayViewBox = `0 0 ${rendererWidth * window.innerWidth} ${rendererHeight * window.innerHeight}`;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: renderer,\n    id: \"renderer\",\n    style: rendererStyle,\n    children: [/*#__PURE__*/_jsxDEV(Viewport, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"node-container\",\n      children: [/*#__PURE__*/_jsxDEV(Node, {\n        ref: testNode,\n        data: testNodeData,\n        index: -1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), rootNode && rootNode.nodes.map((nodeData, i) => /*#__PURE__*/_jsxDEV(Node, {\n        data: nodeData,\n        index: nodeData.id\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 66\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(RendererContent, \"1kVdQtawj//7IT6QB5lpTDsHjo8=\", false, function () {\n  return [useAppLayout];\n});\n_c2 = RendererContent;\nexport default Renderer;\nvar _c, _c2;\n$RefreshReg$(_c, \"Renderer\");\n$RefreshReg$(_c2, \"RendererContent\");","map":{"version":3,"names":["useAppLayout","useRef","Viewport","Node","RendererLayoutProvider","jsxDEV","_jsxDEV","Renderer","children","RendererContent","fileName","_jsxFileName","lineNumber","columnNumber","_c","_s","rendererHeight","rendererWidth","rootNode","renderer","testNode","testNodeData","id","calculateNodeBounds","current","node","nodes","console","log","width","getBoundingClientRect","height","adjList","Map","HORIZONTAL_MARGIN","VERTICAL_MARGIN","CLUSTER_MARGIN","rendererStyle","ref","style","data","index","map","nodeData","i","_c2","$RefreshReg$"],"sources":["C:/Users/kaden/Documents/Web Development/Luma/src/components/renderer.js"],"sourcesContent":["import { useAppLayout } from \"../context/appLayoutContext\";\r\nimport '../styles/renderer.scss';\r\nimport { useRef } from 'react'\r\n\r\nimport Viewport from './viewport';\r\nimport Node from './node';\r\n\r\nimport { RendererLayoutProvider } from '../context/rendererLayoutContext';\r\n\r\nfunction Renderer() {\r\n    return (\r\n        <RendererLayoutProvider>\r\n            <RendererContent />\r\n        </RendererLayoutProvider>\r\n    )\r\n}\r\n\r\nfunction RendererContent() {\r\n    const { rendererHeight, rendererWidth, rootNode } = useAppLayout();\r\n\r\n    let renderer = useRef(null);\r\n    let testNode = useRef(null);\r\n\r\n    let testNodeData = {id: -1};\r\n\r\n    // Calculate necessary width to accomadate node text\r\n    const calculateNodeBounds = () => {\r\n\r\n        if(!testNode.current) return;\r\n        if(!rootNode) return;\r\n\r\n        for(const node of rootNode.nodes || []){\r\n            testNodeData = node;\r\n            testNodeData.id = -1;\r\n\r\n            console.log(testNode.current);\r\n\r\n            node.width = testNode.current.getBoundingClientRect().width;\r\n            node.height = testNode.current.height;\r\n        }\r\n    }\r\n\r\n    calculateNodeBounds();\r\n\r\n    const adjList = new Map();\r\n\r\n    const HORIZONTAL_MARGIN = 150;\r\n    const VERTICAL_MARGIN = 150;\r\n    const CLUSTER_MARGIN = 200;    \r\n\r\n\r\n    const rendererStyle = {\r\n        width: `${rendererWidth}vw`,\r\n        height: `${rendererHeight}vh`,\r\n    }\r\n\r\n    // const overlayViewBox = `0 0 ${rendererWidth * window.innerWidth} ${rendererHeight * window.innerHeight}`;\r\n\r\n    return (\r\n        <div ref={renderer} id='renderer' style={rendererStyle}>\r\n            {/* <svg xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio='xMidYMid meet' viewBox={overlayViewBox} id='relationship-overlay'></svg> */}\r\n            <Viewport></Viewport>\r\n\r\n            <div id='node-container'>\r\n                <Node ref={testNode} data={testNodeData} index={-1}></Node>\r\n                {rootNode && rootNode.nodes.map((nodeData, i) => <Node key={i} data={nodeData} index={nodeData.id} ></Node>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Renderer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}