{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kaden\\\\Documents\\\\Web Development\\\\Luma\\\\src\\\\context\\\\rendererLayoutContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LayoutContext = /*#__PURE__*/createContext(null);\nexport function RendererLayoutProvider({\n  children\n}) {\n  _s();\n  // Initialize all values\n  const [state, setState] = useState(() => {\n    // Try to load from localStorage first\n    const saved = localStorage.getItem('rendererLayoutState');\n    if (saved) {\n      return JSON.parse(saved);\n    }\n\n    // Default values\n    return {\n      offsetX: 0,\n      offsetY: 0,\n      scale: 1\n    };\n  });\n\n  // Save to localStorage whenever state changes\n  useEffect(() => {\n    localStorage.setItem('rendererLayoutState', JSON.stringify(state));\n  }, [state]);\n\n  // Update multiple values at once\n  const updateLayout = upodates => {\n    setState(prev => ({\n      ...prev,\n      ...upodates\n    }));\n  };\n\n  // Create setter functions for each value\n  const setOffsetX = value => updateLayout({\n    offsetX: value\n  });\n  const setOffsetY = value => updateLayout({\n    offsetX: value\n  });\n  const setScale = value => updateLayout({\n    offsetX: value\n  });\n  ;\n  const setScaleAndOffset = (scale, offsetX, offsetY) => {\n    updateLayout({\n      scale,\n      offsetX,\n      offsetY\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(LayoutContext.Provider, {\n    value: {\n      ...state,\n      setOffsetX,\n      setOffsetY,\n      setScale\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n// Custom hook to use the layout context\n_s(RendererLayoutProvider, \"Gas8AFUJUo73AtctWroOu29jBa8=\");\n_c = RendererLayoutProvider;\nexport function useRendererLayout() {\n  _s2();\n  const context = useContext(LayoutContext);\n  if (context === null) {\n    throw new Error('useAppLayout must be used within a AppLayoutProvider');\n  }\n  return context;\n}\n_s2(useRendererLayout, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"RendererLayoutProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","LayoutContext","RendererLayoutProvider","children","_s","state","setState","saved","localStorage","getItem","JSON","parse","offsetX","offsetY","scale","setItem","stringify","updateLayout","upodates","prev","setOffsetX","value","setOffsetY","setScale","setScaleAndOffset","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useRendererLayout","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/kaden/Documents/Web Development/Luma/src/context/rendererLayoutContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst LayoutContext = createContext(null);\r\n\r\nexport function RendererLayoutProvider({ children }) {\r\n  // Initialize all values\r\n  const [state, setState] = useState(() => {\r\n    \r\n    // Try to load from localStorage first\r\n    const saved = localStorage.getItem('rendererLayoutState');\r\n    if (saved) {\r\n      return JSON.parse(saved);\r\n    }\r\n    \r\n    // Default values\r\n    return {\r\n      offsetX: 0,\r\n      offsetY: 0,\r\n      scale: 1,\r\n    };\r\n  });\r\n\r\n  // Save to localStorage whenever state changes\r\n  useEffect(() => {\r\n    localStorage.setItem('rendererLayoutState', JSON.stringify(state));\r\n  }, [state]);\r\n\r\n  // Update multiple values at once\r\n  const updateLayout = (upodates) => {\r\n    setState(prev => ({\r\n      ...prev,\r\n      ...upodates,\r\n    }));\r\n  };\r\n\r\n  // Create setter functions for each value\r\n  const setOffsetX = (value) => updateLayout({ offsetX: value});\r\n  const setOffsetY = (value) => updateLayout({ offsetX: value});\r\n  const setScale = (value) => updateLayout({ offsetX: value});;\r\n\r\n  const setScaleAndOffset = (scale, offsetX, offsetY) => {\r\n    updateLayout({\r\n      scale,\r\n      offsetX,\r\n      offsetY\r\n    });\r\n  };\r\n\r\n  return (\r\n    <LayoutContext.Provider value={{\r\n      ...state,\r\n      setOffsetX,\r\n      setOffsetY,\r\n      setScale,\r\n    }}>\r\n      {children}\r\n    </LayoutContext.Provider>\r\n  );\r\n}\r\n\r\n// Custom hook to use the layout context\r\nexport function useRendererLayout() {\r\n  const context = useContext(LayoutContext);\r\n  if (context === null) {\r\n    throw new Error('useAppLayout must be used within a AppLayoutProvider');\r\n  }\r\n  return context;\r\n}"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,aAAa,gBAAGN,aAAa,CAAC,IAAI,CAAC;AAEzC,OAAO,SAASO,sBAAsBA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACnD;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,MAAM;IAEvC;IACA,MAAMU,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,qBAAqB,CAAC;IACzD,IAAIF,KAAK,EAAE;MACT,OAAOG,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC;IAC1B;;IAEA;IACA,OAAO;MACLK,OAAO,EAAE,CAAC;MACVC,OAAO,EAAE,CAAC;MACVC,KAAK,EAAE;IACT,CAAC;EACH,CAAC,CAAC;;EAEF;EACAhB,SAAS,CAAC,MAAM;IACdU,YAAY,CAACO,OAAO,CAAC,qBAAqB,EAAEL,IAAI,CAACM,SAAS,CAACX,KAAK,CAAC,CAAC;EACpE,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;;EAEX;EACA,MAAMY,YAAY,GAAIC,QAAQ,IAAK;IACjCZ,QAAQ,CAACa,IAAI,KAAK;MAChB,GAAGA,IAAI;MACP,GAAGD;IACL,CAAC,CAAC,CAAC;EACL,CAAC;;EAED;EACA,MAAME,UAAU,GAAIC,KAAK,IAAKJ,YAAY,CAAC;IAAEL,OAAO,EAAES;EAAK,CAAC,CAAC;EAC7D,MAAMC,UAAU,GAAID,KAAK,IAAKJ,YAAY,CAAC;IAAEL,OAAO,EAAES;EAAK,CAAC,CAAC;EAC7D,MAAME,QAAQ,GAAIF,KAAK,IAAKJ,YAAY,CAAC;IAAEL,OAAO,EAAES;EAAK,CAAC,CAAC;EAAC;EAE5D,MAAMG,iBAAiB,GAAGA,CAACV,KAAK,EAAEF,OAAO,EAAEC,OAAO,KAAK;IACrDI,YAAY,CAAC;MACXH,KAAK;MACLF,OAAO;MACPC;IACF,CAAC,CAAC;EACJ,CAAC;EAED,oBACEb,OAAA,CAACC,aAAa,CAACwB,QAAQ;IAACJ,KAAK,EAAE;MAC7B,GAAGhB,KAAK;MACRe,UAAU;MACVE,UAAU;MACVC;IACF,CAAE;IAAApB,QAAA,EACCA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B;;AAEA;AAAAzB,EAAA,CAxDgBF,sBAAsB;AAAA4B,EAAA,GAAtB5B,sBAAsB;AAyDtC,OAAO,SAAS6B,iBAAiBA,CAAA,EAAG;EAAAC,GAAA;EAClC,MAAMC,OAAO,GAAGrC,UAAU,CAACK,aAAa,CAAC;EACzC,IAAIgC,OAAO,KAAK,IAAI,EAAE;IACpB,MAAM,IAAIC,KAAK,CAAC,sDAAsD,CAAC;EACzE;EACA,OAAOD,OAAO;AAChB;AAACD,GAAA,CANeD,iBAAiB;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}