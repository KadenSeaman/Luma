{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kaden\\\\Documents\\\\Web Development\\\\Luma\\\\src\\\\components\\\\renderer.js\",\n  _s = $RefreshSig$();\nimport { useAppLayout } from \"../context/appLayoutContext\";\nimport '../styles/renderer.scss';\nimport { useRef } from 'react';\nimport Viewport from './viewport';\nimport Node from './node';\nimport { RendererLayoutProvider } from '../context/rendererLayoutContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Renderer() {\n  return /*#__PURE__*/_jsxDEV(RendererLayoutProvider, {\n    children: /*#__PURE__*/_jsxDEV(RendererContent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n_c = Renderer;\nfunction RendererContent() {\n  _s();\n  const {\n    rendererHeight,\n    rendererWidth,\n    rootNode\n  } = useAppLayout();\n  let renderer = useRef(null);\n  const assignPositions = levels => {\n    const levelToNodes = new Map();\n    for (node of rootNode.nodeList) {\n      const level = levels[node.id];\n      if (!levelToNodes.has(level)) levelToNodes.set(level, []);\n      levelToNodes.get(level).push(node);\n    }\n    const ySpacing = 100;\n    const xSpacing = 100;\n    for (const [level, nodes] of levelToNodes.entries()) {\n      const y = level * ySpacing;\n      nodes.forEach(node => {\n        const x = i * xSpacing;\n        node.x = x;\n        node.y = y;\n      });\n    }\n  };\n  const computeLevels = adjList => {\n    const levels = new Map();\n    const visited = new Set();\n    const visitDFS = (nodeID, currentLevel) => {\n      if (visited.has(nodeID)) return;\n      visited.add(nodeID);\n      levels.set(nodeID, Math.max(levels.get(nodeID) || 0, currentLevel));\n      for (const nei of adjList.get(nodeID)) {\n        visitDFS(nei, currentLevel + 1);\n      }\n    };\n    for (const nodeID in adjList) {\n      visitDFS(nodeID, 0);\n    }\n    return levels;\n  };\n  const layoutNodes = () => {\n    const adjList = new Map();\n    for (const node of rootNode.nodeList) {\n      adjList.set(node, []);\n    }\n    for (const edge of rootNode.relationshipList) {\n      adjList.get(edge.source).push(edge.destination);\n    }\n    const levels = computeLevels(adjList);\n    assignPositions(levels);\n    printLayout;\n  };\n  const printLayout = () => {\n    for (const node of rootNode.nodeList) {\n      console.log(`node:${node.name}: ${node.x}, ${node.y}`);\n    }\n  };\n  const rendererStyle = {\n    width: `${rendererWidth}vw`,\n    height: `${rendererHeight}vh`\n  };\n\n  // const overlayViewBox = `0 0 ${rendererWidth * window.innerWidth} ${rendererHeight * window.innerHeight}`;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: renderer,\n    id: \"renderer\",\n    style: rendererStyle,\n    children: [/*#__PURE__*/_jsxDEV(Viewport, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"node-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n}\n_s(RendererContent, \"o8n8OckZ73WVV5gtlAnWR6YpwV8=\", false, function () {\n  return [useAppLayout];\n});\n_c2 = RendererContent;\nexport default Renderer;\nvar _c, _c2;\n$RefreshReg$(_c, \"Renderer\");\n$RefreshReg$(_c2, \"RendererContent\");","map":{"version":3,"names":["useAppLayout","useRef","Viewport","Node","RendererLayoutProvider","jsxDEV","_jsxDEV","Renderer","children","RendererContent","fileName","_jsxFileName","lineNumber","columnNumber","_c","_s","rendererHeight","rendererWidth","rootNode","renderer","assignPositions","levels","levelToNodes","Map","node","nodeList","level","id","has","set","get","push","ySpacing","xSpacing","nodes","entries","y","forEach","x","i","computeLevels","adjList","visited","Set","visitDFS","nodeID","currentLevel","add","Math","max","nei","layoutNodes","edge","relationshipList","source","destination","printLayout","console","log","name","rendererStyle","width","height","ref","style","_c2","$RefreshReg$"],"sources":["C:/Users/kaden/Documents/Web Development/Luma/src/components/renderer.js"],"sourcesContent":["import { useAppLayout } from \"../context/appLayoutContext\";\r\nimport '../styles/renderer.scss';\r\nimport { useRef } from 'react'\r\n\r\nimport Viewport from './viewport';\r\nimport Node from './node';\r\n\r\nimport { RendererLayoutProvider } from '../context/rendererLayoutContext';\r\n\r\n\r\n\r\n\r\nfunction Renderer() {\r\n    return (\r\n        <RendererLayoutProvider>\r\n            <RendererContent />\r\n        </RendererLayoutProvider>\r\n    )\r\n}\r\n\r\nfunction RendererContent() {\r\n    const { rendererHeight, rendererWidth, rootNode } = useAppLayout();\r\n\r\n    let renderer = useRef(null);\r\n\r\n    const assignPositions = (levels) => {\r\n        const levelToNodes = new Map();\r\n\r\n        for(node of rootNode.nodeList){\r\n            const level = levels[node.id];\r\n\r\n            if(!levelToNodes.has(level)) levelToNodes.set(level, []);\r\n            levelToNodes.get(level).push(node);\r\n        }\r\n\r\n        const ySpacing = 100;\r\n        const xSpacing = 100;\r\n\r\n        for(const [level, nodes] of levelToNodes.entries()){\r\n            const y = level * ySpacing;\r\n\r\n            nodes.forEach(node => {\r\n                const x = i * xSpacing;\r\n                node.x = x;\r\n                node.y = y;\r\n            });\r\n        }\r\n    }\r\n    \r\n    const computeLevels = (adjList) => {\r\n        const levels = new Map();\r\n        const visited = new Set();\r\n    \r\n        const visitDFS = (nodeID, currentLevel) => {\r\n            if(visited.has(nodeID)) return;\r\n    \r\n            visited.add(nodeID);\r\n            levels.set(nodeID, Math.max(levels.get(nodeID) || 0, currentLevel));\r\n    \r\n            for(const nei of adjList.get(nodeID)){\r\n                visitDFS(nei, currentLevel + 1);\r\n            }\r\n        }\r\n    \r\n        for (const nodeID in adjList){\r\n            visitDFS(nodeID, 0);\r\n        }\r\n    \r\n        return levels;\r\n    }\r\n\r\n    const layoutNodes = () => {\r\n        const adjList = new Map();\r\n    \r\n        for(const node of rootNode.nodeList){\r\n            adjList.set(node, []);\r\n        }\r\n    \r\n        for(const edge of rootNode.relationshipList){\r\n            adjList.get(edge.source).push(edge.destination);\r\n        }\r\n    \r\n        const levels = computeLevels(adjList);\r\n        assignPositions(levels);\r\n        printLayout\r\n    }\r\n\r\n    const printLayout = () => {\r\n        for(const node of rootNode.nodeList){\r\n            console.log(`node:${node.name}: ${node.x}, ${node.y}`)\r\n        }\r\n    }\r\n\r\n    const rendererStyle = {\r\n        width: `${rendererWidth}vw`,\r\n        height: `${rendererHeight}vh`,\r\n    }\r\n\r\n    // const overlayViewBox = `0 0 ${rendererWidth * window.innerWidth} ${rendererHeight * window.innerHeight}`;\r\n\r\n    return (\r\n        <div ref={renderer} id='renderer' style={rendererStyle}>\r\n            {/* <svg xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio='xMidYMid meet' viewBox={overlayViewBox} id='relationship-overlay'></svg> */}\r\n            <Viewport></Viewport>\r\n\r\n            <div id='node-container'>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Renderer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}